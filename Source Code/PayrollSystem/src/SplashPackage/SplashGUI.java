package SplashPackage;

import com.formdev.flatlaf.FlatLightLaf;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.ServerSocket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.LineBorder;

public final class SplashGUI extends javax.swing.JFrame {
    public static ServerSocket payrollsystem_ServerSocketstatus;
    /**
     * Creates new form SplashGUI
     * @throws java.io.IOException
     */
    public SplashGUI() throws IOException {
        initComponents();
        //setLocationRelativeTo(null); //<-- center to the screen the frame
        this.setIconImage(new ImageIcon(getClass().getResource("/Images/TASKBAR_ICON.png")).getImage());
        SplashGUI.this.getRootPane().setBorder(new LineBorder(new Color(0,102,204), 1, false)); //<-- set border for this frame

        Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize();// size of the screen
        Insets toolHeight = Toolkit.getDefaultToolkit().getScreenInsets(this.getGraphicsConfiguration());// height of the task bar
        this.setLocation(scrSize.width - this.getWidth(), scrSize.height - toolHeight.bottom-1 - this.getHeight());

        checkAppTaskStatus(); //<-- check if the application is already running or not.
        
        
        if (jLabel1.getText().equals("0%") | jLabel1.getText().equals("0")) {
            mainAnimatedIcon.setVisible(false);
            mainAnimatedIcon.setAnchoProgress(30);
            progress.setVisible(false);

        } else if (jLabel1.getText().equals("100%") | jLabel1.getText().equals("100")) {
            mainAnimatedIcon.setVisible(false);
            mainAnimatedIcon.setAnchoProgress(30);
            progress.setVisible(false);
            
        } else {
            mainAnimatedIcon.setVisible(true);
            mainAnimatedIcon.setAnchoProgress(4);
            progress.setVisible(true);            
            
        }
        
    }
    
    //check if the Program is Running or Not
    public void checkAppTaskStatus () throws IOException {
        payrollsystem_ServerSocketstatus = null;
        try {
            payrollsystem_ServerSocketstatus = new ServerSocket(1044);
        } catch (IOException e) {
            //System.err.println("Application already running!");
            shuttingdown();
            System.exit(-1);
        }    
    }
    
    //shutting down void
    public void shuttingdown() throws IOException {
        final JProgressBar progressBar1 = new JProgressBar();
        progressBar1.setIndeterminate(true);
        final JOptionPane optionPane1 = new JOptionPane("<html><center>2 Instances of This Program Cannot Be Running at The Same Time!<br>Exiting now...</center></html>", JOptionPane.ERROR_MESSAGE, JOptionPane.DEFAULT_OPTION, null, new Object[]{}, null);
        final JDialog dialog1 = new JDialog();
        optionPane1.add(progressBar1, BorderLayout.CENTER);
        progressBar1.setIndeterminate(true);
        dialog1.setTitle("SYSTEM ERROR | ECoders");
        dialog1.setAlwaysOnTop(true);
        dialog1.setModal(true);
        dialog1.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        dialog1.setContentPane(optionPane1);
        dialog1.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        dialog1.pack();
        Image imageloadingtop1;
        imageloadingtop1 = ImageIO.read(getClass().getResource("/Images/wait_16px.png"));
        dialog1.setIconImage(imageloadingtop1); //set icon to dialog
        dialog1.setLocationRelativeTo(null); //center the dialog
    
        // Set a timer
        new Thread(() -> {
            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
            }
            dialog1.dispose();
             //System.exit(0);
        }).start();
        dialog1.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        zabsystem = new javax.swing.JLabel();
        zabmeaning = new javax.swing.JLabel();
        mainIcon = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        mainAnimatedIcon = new rojerusan.componentes.RSProgressMaterial();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(249, 250, 253));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setBackground(new java.awt.Color(255, 51, 51));
        kGradientPanel1.setForeground(new java.awt.Color(102, 0, 51));
        kGradientPanel1.setEndColor(new java.awt.Color(204, 0, 0));
        kGradientPanel1.setFocusTraversalPolicyProvider(true);
        kGradientPanel1.setFocusable(false);
        kGradientPanel1.setGradientFocus(1);
        kGradientPanel1.setStartColor(new java.awt.Color(249, 250, 253));

        zabsystem.setFont(new java.awt.Font("VALORANT", 1, 12)); // NOI18N
        zabsystem.setForeground(new java.awt.Color(255, 255, 255));
        zabsystem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zabsystem.setText("AGENT PAYROLL  SYSTEM");
        kGradientPanel1.add(zabsystem);
        zabsystem.setBounds(0, 110, 270, 14);

        zabmeaning.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        zabmeaning.setForeground(new java.awt.Color(255, 255, 255));
        zabmeaning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zabmeaning.setText("Â© SENTINELS");
        zabmeaning.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        kGradientPanel1.add(zabmeaning);
        zabmeaning.setBounds(0, 130, 270, 12);

        mainIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/50.png"))); // NOI18N
        kGradientPanel1.add(mainIcon);
        mainIcon.setBounds(0, 23, 270, 50);

        progress.setBackground(new java.awt.Color(249, 250, 253));
        progress.setFont(new java.awt.Font("Segoe UI", 0, 5)); // NOI18N
        progress.setForeground(new java.awt.Color(0, 153, 204));
        progress.setBorderPainted(false);
        kGradientPanel1.add(progress);
        progress.setBounds(0, 162, 270, 8);

        mainAnimatedIcon.setForeground(new java.awt.Color(0, 0, 0));
        mainAnimatedIcon.setAnchoProgress(4);
        mainAnimatedIcon.setMinimumSize(new java.awt.Dimension(100, 80));
        mainAnimatedIcon.setPreferredSize(new java.awt.Dimension(100, 80));

        jLabel1.setFont(new java.awt.Font("VALORANT", 1, 10)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("0%");
        mainAnimatedIcon.add(jLabel1);
        jLabel1.setBounds(30, 75, 40, 12);

        kGradientPanel1.add(mainAnimatedIcon);
        mainAnimatedIcon.setBounds(85, 0, 100, 100);

        jPanel1.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, 170));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel( new FlatLightLaf() );
        } catch( UnsupportedLookAndFeelException ex ) {
            System.err.println( "Failed to initialize modern LaF" +ex );
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new SplashGUI().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(SplashGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private keeptoo.KGradientPanel kGradientPanel1;
    public rojerusan.componentes.RSProgressMaterial mainAnimatedIcon;
    private javax.swing.JLabel mainIcon;
    public javax.swing.JProgressBar progress;
    private javax.swing.JLabel zabmeaning;
    private javax.swing.JLabel zabsystem;
    // End of variables declaration//GEN-END:variables
}
